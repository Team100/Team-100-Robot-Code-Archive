// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc100.Robot2013.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc100.Robot2013.Robot;

/**
 *
 */
public class Climb extends Command {
    public Climb() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        requires(Robot.climber);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.climber.resetLevel();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        while (!Robot.climber.getUpperLimit()){
            Robot.climber.raiseElevator();
        }
        while(!Robot.climber.getLowerLimit()){
            Robot.climber.lowerElevator();
        }
        Robot.climber.nextLevel();
        while (!Robot.climber.getUpperLimit()){
            Robot.climber.raiseElevator();
        }
        while(!Robot.climber.getLowerLimit()){
            Robot.climber.lowerElevator();
        }
        Robot.climber.nextLevel();
        while (!Robot.climber.getUpperLimit()){
            Robot.climber.raiseElevator();
        }
        while(!Robot.climber.getPartwayLimit()){
            Robot.climber.lowerElevatorPartway();
        }
        Robot.climber.nextLevel();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return (Robot.climber.getLevel()>2);
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
