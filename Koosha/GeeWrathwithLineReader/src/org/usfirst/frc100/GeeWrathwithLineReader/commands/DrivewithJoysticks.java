// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc100.GeeWrathwithLineReader.commands;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc100.GeeWrathwithLineReader.OI;
import org.usfirst.frc100.GeeWrathwithLineReader.Robot;
import org.usfirst.frc100.GeeWrathwithLineReader.subsystems.DriveTrain;

/**
 *
 */
public class  DrivewithJoysticks extends Command {
    
    private final OI oi = Robot.oi;
    private final DriveTrain driveTrain = Robot.driveTrain;

    public DrivewithJoysticks() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(driveTrain);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute()
    {
        if(!driveTrain.getReverse())
            driveTrain.tankDrive(-0.75*oi.getDualshock().getY(), -0.75*oi.getDualshock().getRawAxis(5));
        else
            driveTrain.tankDrive(0.75*oi.getDualshock().getRawAxis(5), 0.75*oi.getDualshock().getY());
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}