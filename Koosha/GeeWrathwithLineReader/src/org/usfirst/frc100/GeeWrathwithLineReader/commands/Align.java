// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc100.GeeWrathwithLineReader.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc100.GeeWrathwithLineReader.Robot;
import org.usfirst.frc100.GeeWrathwithLineReader.subsystems.DriveTrain;

/**
 *
 */
public class  Align extends Command
{
    private final DriveTrain driveTrain = Robot.driveTrain;
    private boolean lTriggered;
    private boolean rTriggered;
    private boolean leftInPos = false;
    private boolean rightInPos = false;
    private double displacement = 0.0;
    private boolean doneTurn = false;
    private boolean doneAlign = false;

    public Align()
    {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        requires(driveTrain);
    }

    // Called just before this Command runs the first time
    protected void initialize()
    {
        driveTrain.startEncoder();
        driveTrain.startCounter();
        driveTrain.setBearing(driveTrain.getAngle());
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute()
    {
        lTriggered = driveTrain.getLeftTrigger();
        rTriggered = driveTrain.getRightTrigger();
        
        if(lTriggered && rTriggered)
        {
            driveTrain.autoDriveStraight(216.0, 1.0);
        }
        else if(!lTriggered && rTriggered)
        {
            if(!leftInPos)
            {
               driveTrain.resetEncoder();
               driveTrain.autoDriveStraight(216.0, 1.0);
            }
            if(rightInPos)
            {
                displacement = driveTrain.getDistance();
            }
            leftInPos = true;
        }
        else if(lTriggered && !rTriggered)
        {
            if(!rightInPos)
            {
                driveTrain.resetEncoder();
                driveTrain.autoDriveStraight(216.0, 1.0);
            }
            if(leftInPos)
            {
                displacement = -driveTrain.getDistance();
            }
            rightInPos = true;
        }
        else if(!lTriggered && !rTriggered)
        {
            if(doneTurn)
            {
                driveTrain.tankDrive(0.0, 0.0);
                doneAlign = true;
            }
            else
            {
                driveTrain.autoDriveStraight(-216.0, 1.0);
            }
        }
        
        if(leftInPos && rightInPos)
        {
            driveTrain.autoTurnByAngle(displacement);
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished()
    {
        return doneAlign;
    }

    // Called once after isFinished returns true
    protected void end() 
    {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted()
    {
    }
}
